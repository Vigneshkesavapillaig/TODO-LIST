{"ast":null,"code":"var _jsxFileName = \"D:\\\\ToDoProject\\\\todoapp\\\\src\\\\Component\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport \"../ToDoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [inProgressList, setInProgressList] = useState([]);\n  const [doneList, setDoneList] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [newInProgress, setNewInProgress] = useState(\"\");\n  const [newDone, setNewDone] = useState(\"\");\n  const [additionalLists, setAdditionalLists] = useState([]);\n  const [newListTitle, setNewListTitle] = useState(\"\");\n  useEffect(() => {\n    fetchLists();\n    fetchInProgressList();\n    fetchDoneList();\n    fetchAdditionalLists();\n  }, []);\n  const fetchLists = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/todos/getToDoList\");\n      setTodoList(response.data);\n    } catch (error) {\n      console.error(\"Error fetching lists:\", error);\n    }\n  };\n  const fetchInProgressList = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/inprogress/getInProgressList\");\n      setInProgressList(response.data);\n    } catch (error) {\n      console.error(\"Error fetching in-progress list:\", error);\n    }\n  };\n  const fetchDoneList = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/done/getDoneList\");\n      setDoneList(response.data);\n    } catch (error) {\n      console.error(\"Error fetching done list:\", error);\n    }\n  };\n  const fetchAdditionalLists = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/additionalLists/getAdditionalLists\");\n      setAdditionalLists(response.data);\n    } catch (error) {\n      console.error(\"Error fetching additional lists:\", error);\n    }\n  };\n  const handleAddTodo = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/todos/addToDo\", {\n        title: newTodo\n      });\n      setTodoList([...todoList, response.data]);\n      setNewTodo(\"\");\n    } catch (error) {\n      console.error(\"Error adding todo:\", error);\n    }\n  };\n  const handleInProgress = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/inprogress/addInProgressList\", {\n        InProgresstitle: newInProgress\n      });\n      setInProgressList([...inProgressList, response.data]);\n      setNewInProgress(\"\");\n    } catch (error) {\n      console.error(\"Error adding in-progress item:\", error);\n    }\n  };\n  const handleAddDone = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/done/addDoneList\", {\n        DoneTitle: newDone\n      });\n      setDoneList([...doneList, response.data]);\n      setNewDone(\"\");\n    } catch (error) {\n      console.error(\"Error adding done item:\", error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/todos/deletToDoList/${id}`);\n      setTodoList(todoList.filter(todo => todo._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting todo:\", error);\n    }\n  };\n  const handleDeleteInProgress = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/inprogress/deletInProgressList/${id}`);\n      setInProgressList(inProgressList.filter(item => item._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting in-progress item:\", error);\n    }\n  };\n  const handleDeleteDone = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/done/deletDoneList/${id}`);\n      setDoneList(doneList.filter(item => item._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting done item:\", error);\n    }\n  };\n  const handleUpdateTodo = async (id, updatedTitle) => {\n    try {\n      const updatedDate = new Date().toLocaleString();\n      await axios.put(`http://localhost:5000/api/todos/updateToDoList/${id}`, {\n        title: updatedTitle,\n        createdAt: updatedDate\n      });\n      setTodoList(todoList.map(todo => todo._id === id ? {\n        ...todo,\n        title: updatedTitle,\n        createdAt: updatedDate\n      } : todo));\n    } catch (error) {\n      console.error(\"Error updating todo:\", error);\n    }\n  };\n  const handleUpdateInProgress = async (id, updatedProgressTitle) => {\n    try {\n      const updatedDate = new Date().toLocaleString();\n      await axios.put(`http://localhost:5000/api/inprogress/updateInProgressList/${id}`, {\n        InProgresstitle: updatedProgressTitle,\n        createdAt: updatedDate\n      });\n      setInProgressList(inProgressList.map(item => item._id === id ? {\n        ...item,\n        InProgresstitle: updatedProgressTitle,\n        createdAt: updatedDate\n      } : item));\n    } catch (error) {\n      console.error(\"Error updating in-progress item:\", error);\n    }\n  };\n  const handleUpdateDone = async (id, updatedDoneTitle) => {\n    try {\n      const updatedDate = new Date().toLocaleString();\n      await axios.put(`http://localhost:5000/api/done/updateDoneList/${id}`, {\n        DoneTitle: updatedDoneTitle,\n        createdAt: updatedDate\n      });\n      setDoneList(doneList.map(item => item._id === id ? {\n        ...item,\n        DoneTitle: updatedDoneTitle,\n        createdAt: updatedDate\n      } : item));\n    } catch (error) {\n      console.error(\"Error updating done item:\", error);\n    }\n  };\n\n  // Additional lists handlers\n  const handleAddNewList = async () => {\n    if (!newListTitle) return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/additionalLists/addAdditionalList\", {\n        title: newListTitle,\n        items: []\n      });\n      setAdditionalLists([...additionalLists, response.data]);\n      setNewListTitle(\"\");\n    } catch (error) {\n      console.error(\"Error adding new list:\", error);\n    }\n  };\n  const handleAddNewListItem = async (listId, newItemTitle) => {\n    try {\n      const updatedLists = additionalLists.map(list => {\n        if (list._id === listId) {\n          list.items.push({\n            title: newItemTitle\n          });\n        }\n        return list;\n      });\n      await axios.put(`http://localhost:5000/api/additionalLists/updateAdditionalList/${listId}`, {\n        items: updatedLists.find(list => list._id === listId).items\n      });\n      setAdditionalLists(updatedLists);\n    } catch (error) {\n      console.error(\"Error adding item to list:\", error);\n    }\n  };\n  const handleDeleteNewListItem = async (listId, itemIndex) => {\n    try {\n      const updatedLists = additionalLists.map(list => {\n        if (list._id === listId) {\n          list.items.splice(itemIndex, 1);\n        }\n        return list;\n      });\n      await axios.put(`http://localhost:5000/api/additionalLists/updateAdditionalList/${listId}`, {\n        items: updatedLists.find(list => list._id === listId).items\n      });\n      setAdditionalLists(updatedLists);\n    } catch (error) {\n      console.error(\"Error deleting item from list:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"todo-header\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"New List Title\",\n        value: newListTitle,\n        onChange: e => setNewListTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"addListButton\",\n        onClick: handleAddNewList,\n        children: \"Add List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: additionalLists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"additional-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: list.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            placeholder: `Add new item to ${list.title}`,\n            value: list.newItem,\n            onChange: e => setAdditionalLists(additionalLists.map(l => l._id === list._id ? {\n              ...l,\n              newItem: e.target.value\n            } : l))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"addButton\",\n            onClick: () => handleAddNewListItem(list._id, list.newItem),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"additional-list-items\",\n          children: list.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"additional-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: item.title,\n              onChange: e => setAdditionalLists(additionalLists.map(l => l._id === list._id ? {\n                ...l,\n                items: l.items.map((i, idx) => idx === index ? {\n                  ...i,\n                  title: e.target.value\n                } : i)\n              } : l))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"additional-icons\",\n              children: /*#__PURE__*/_jsxDEV(BsTrash, {\n                className: \"cursor-pointer\",\n                onClick: () => handleDeleteNewListItem(list._id, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, list._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"MMxrwGXrWY+/gKrTYsUDoORgtjI=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","axios","BsTrash","InputGroup","FormControl","Button","jsxDEV","_jsxDEV","TodoList","_s","todoList","setTodoList","inProgressList","setInProgressList","doneList","setDoneList","newTodo","setNewTodo","newInProgress","setNewInProgress","newDone","setNewDone","additionalLists","setAdditionalLists","newListTitle","setNewListTitle","fetchLists","fetchInProgressList","fetchDoneList","fetchAdditionalLists","response","get","data","error","console","handleAddTodo","post","title","handleInProgress","InProgresstitle","handleAddDone","DoneTitle","handleDeleteTodo","id","delete","filter","todo","_id","handleDeleteInProgress","item","handleDeleteDone","handleUpdateTodo","updatedTitle","updatedDate","Date","toLocaleString","put","createdAt","map","handleUpdateInProgress","updatedProgressTitle","handleUpdateDone","updatedDoneTitle","handleAddNewList","items","handleAddNewListItem","listId","newItemTitle","updatedLists","list","push","find","handleDeleteNewListItem","itemIndex","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","newItem","l","index","i","idx","_c","$RefreshReg$"],"sources":["D:/ToDoProject/todoapp/src/Component/ToDoList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BsTrash } from \"react-icons/bs\";\r\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport \"../ToDoList.css\";\r\n\r\nconst TodoList = () => {\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [inProgressList, setInProgressList] = useState([]);\r\n  const [doneList, setDoneList] = useState([]);\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const [newInProgress, setNewInProgress] = useState(\"\");\r\n  const [newDone, setNewDone] = useState(\"\");\r\n  const [additionalLists, setAdditionalLists] = useState([]);\r\n  const [newListTitle, setNewListTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchLists();\r\n    fetchInProgressList();\r\n    fetchDoneList();\r\n    fetchAdditionalLists();\r\n  }, []);\r\n\r\n  const fetchLists = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/todos/getToDoList\"\r\n      );\r\n      setTodoList(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching lists:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchInProgressList = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/inprogress/getInProgressList\"\r\n      );\r\n      setInProgressList(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching in-progress list:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchDoneList = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/done/getDoneList\"\r\n      );\r\n      setDoneList(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching done list:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchAdditionalLists = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/additionalLists/getAdditionalLists\"\r\n      );\r\n      setAdditionalLists(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching additional lists:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddTodo = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/todos/addToDo\",\r\n        {\r\n          title: newTodo,\r\n        }\r\n      );\r\n      setTodoList([...todoList, response.data]);\r\n      setNewTodo(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding todo:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInProgress = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/inprogress/addInProgressList\",\r\n        {\r\n          InProgresstitle: newInProgress,\r\n        }\r\n      );\r\n      setInProgressList([...inProgressList, response.data]);\r\n      setNewInProgress(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding in-progress item:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddDone = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/done/addDoneList\",\r\n        {\r\n          DoneTitle: newDone,\r\n        }\r\n      );\r\n      setDoneList([...doneList, response.data]);\r\n      setNewDone(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding done item:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTodo = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/todos/deletToDoList/${id}`);\r\n      setTodoList(todoList.filter((todo) => todo._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting todo:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteInProgress = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:5000/api/inprogress/deletInProgressList/${id}`\r\n      );\r\n      setInProgressList(inProgressList.filter((item) => item._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting in-progress item:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDone = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/done/deletDoneList/${id}`);\r\n      setDoneList(doneList.filter((item) => item._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting done item:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateTodo = async (id, updatedTitle) => {\r\n    try {\r\n      const updatedDate = new Date().toLocaleString();\r\n      await axios.put(`http://localhost:5000/api/todos/updateToDoList/${id}`, {\r\n        title: updatedTitle,\r\n        createdAt: updatedDate,\r\n      });\r\n      setTodoList(\r\n        todoList.map((todo) =>\r\n          todo._id === id\r\n            ? { ...todo, title: updatedTitle, createdAt: updatedDate }\r\n            : todo\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error updating todo:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateInProgress = async (id, updatedProgressTitle) => {\r\n    try {\r\n      const updatedDate = new Date().toLocaleString();\r\n      await axios.put(\r\n        `http://localhost:5000/api/inprogress/updateInProgressList/${id}`,\r\n        {\r\n          InProgresstitle: updatedProgressTitle,\r\n          createdAt: updatedDate,\r\n        }\r\n      );\r\n      setInProgressList(\r\n        inProgressList.map((item) =>\r\n          item._id === id\r\n            ? {\r\n                ...item,\r\n                InProgresstitle: updatedProgressTitle,\r\n                createdAt: updatedDate,\r\n              }\r\n            : item\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error updating in-progress item:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateDone = async (id, updatedDoneTitle) => {\r\n    try {\r\n      const updatedDate = new Date().toLocaleString();\r\n      await axios.put(`http://localhost:5000/api/done/updateDoneList/${id}`, {\r\n        DoneTitle: updatedDoneTitle,\r\n        createdAt: updatedDate,\r\n      });\r\n      setDoneList(\r\n        doneList.map((item) =>\r\n          item._id === id\r\n            ? { ...item, DoneTitle: updatedDoneTitle, createdAt: updatedDate }\r\n            : item\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error updating done item:\", error);\r\n    }\r\n  };\r\n\r\n  // Additional lists handlers\r\n  const handleAddNewList = async () => {\r\n    if (!newListTitle) return;\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/additionalLists/addAdditionalList\",\r\n        {\r\n          title: newListTitle,\r\n          items: [],\r\n        }\r\n      );\r\n      setAdditionalLists([...additionalLists, response.data]);\r\n      setNewListTitle(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding new list:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddNewListItem = async (listId, newItemTitle) => {\r\n    try {\r\n      const updatedLists = additionalLists.map((list) => {\r\n        if (list._id === listId) {\r\n          list.items.push({ title: newItemTitle });\r\n        }\r\n        return list;\r\n      });\r\n      await axios.put(\r\n        `http://localhost:5000/api/additionalLists/updateAdditionalList/${listId}`,\r\n        {\r\n          items: updatedLists.find((list) => list._id === listId).items,\r\n        }\r\n      );\r\n      setAdditionalLists(updatedLists);\r\n    } catch (error) {\r\n      console.error(\"Error adding item to list:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteNewListItem = async (listId, itemIndex) => {\r\n    try {\r\n      const updatedLists = additionalLists.map((list) => {\r\n        if (list._id === listId) {\r\n          list.items.splice(itemIndex, 1);\r\n        }\r\n        return list;\r\n      });\r\n      await axios.put(\r\n        `http://localhost:5000/api/additionalLists/updateAdditionalList/${listId}`,\r\n        {\r\n          items: updatedLists.find((list) => list._id === listId).items,\r\n        }\r\n      );\r\n      setAdditionalLists(updatedLists);\r\n    } catch (error) {\r\n      console.error(\"Error deleting item from list:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <h1 className=\"todo-header\">Todo List</h1>\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"New List Title\"\r\n          value={newListTitle}\r\n          onChange={(e) => setNewListTitle(e.target.value)}\r\n        />\r\n        <Button className=\"addListButton\" onClick={handleAddNewList}>\r\n          Add List\r\n        </Button>\r\n      </InputGroup>\r\n\r\n      <div className=\"list-container\">\r\n        {additionalLists.map((list) => (\r\n          <div key={list._id} className=\"additional-list\">\r\n            <h2>{list.title}</h2>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                placeholder={`Add new item to ${list.title}`}\r\n                value={list.newItem}\r\n                onChange={(e) =>\r\n                  setAdditionalLists(\r\n                    additionalLists.map((l) =>\r\n                      l._id === list._id ? { ...l, newItem: e.target.value } : l\r\n                    )\r\n                  )\r\n                }\r\n              />\r\n              <Button\r\n                className=\"addButton\"\r\n                onClick={() => handleAddNewListItem(list._id, list.newItem)}\r\n              >\r\n                Add\r\n              </Button>\r\n            </InputGroup>\r\n            <div className=\"additional-list-items\">\r\n              {list.items.map((item, index) => (\r\n                <div key={index} className=\"additional-item\">\r\n                  <textarea\r\n                    value={item.title}\r\n                    onChange={(e) =>\r\n                      setAdditionalLists(\r\n                        additionalLists.map((l) =>\r\n                          l._id === list._id\r\n                            ? {\r\n                                ...l,\r\n                                items: l.items.map((i, idx) =>\r\n                                  idx === index\r\n                                    ? { ...i, title: e.target.value }\r\n                                    : i\r\n                                ),\r\n                              }\r\n                            : l\r\n                        )\r\n                      )\r\n                    }\r\n                  />\r\n                  <div className=\"additional-icons\">\r\n                    <BsTrash\r\n                      className=\"cursor-pointer\"\r\n                      onClick={() => handleDeleteNewListItem(list._id, index)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}